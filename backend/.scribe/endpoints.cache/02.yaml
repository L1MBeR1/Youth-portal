## Autogenerated by Scribe. DO NOT MODIFY.

name: Пользователи
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Пользователи
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получить список всех пользователей'
      description: |-
        Получение списка всех пользователей с пагинацией, по 10 пользователей на страницу.
        Страницы передаются в параметре `page`.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'номер страницы.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      page: 19
    fileParameters: []
    responses:
      -
        status: 401
        content: |-
          {
              "message": "Token not provided"
          }
        headers:
          www-authenticate: jwt-auth
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
          vary: Origin
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/roles/{role_name}'
    metadata:
      groupName: Пользователи
      groupDescription: ''
      subgroup: Роли
      subgroupDescription: ''
      title: 'Добавить роль пользователю'
      description: 'Добавить роль пользователю с ID `user_id` и названием роли `role_name`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_name:
        name: role_name
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: id
      role_name: consequuntur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}/roles/{role_name}'
    metadata:
      groupName: Пользователи
      groupDescription: ''
      subgroup: Роли
      subgroupDescription: ''
      title: 'Удалить роль у пользователя'
      description: 'Удалить роль у пользователя с ID `user_id` и названием роли `role_name`.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: beatae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_name:
        name: role_name
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: beatae
      role_name: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
